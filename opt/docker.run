#!/bin/bash

SCRIPT_DIR=$(dirname `readlink -f $0`)
PROJECT_DIR=$(dirname $SCRIPT_DIR)
ENV="PRO"
MIX_ENV="prod"
if [ "$1" = "DEV" ];then
  ENV="DEV"
  MIX_ENV="dev_docker"
fi

id_for_container(){
  CONTAINER="$1\s*$"
  CONTAINER_ID="$(docker ps -a | grep "$CONTAINER" | awk '{print $1}')"
  echo $CONTAINER_ID
}

echo "\n=============================="
echo "sourcing environment variables"
echo "=============================="
source $PROJECT_DIR/opt/docker.env
echo "\n========="
echo "|ENV=$ENV|"
echo "========="


if [ -z "$(id_for_container 'pomodoro-auth-sessions')" ]; then
  echo "\n----> STARTING 'pomodoro-auth-sessions'"
  $PROJECT_DIR/auth-sessions/opt/run
fi

if [ -z "$(id_for_container 'pomodoro-auth-db')" ]; then
  echo "\n----> STARTING 'pomodoro-auth-db'"
  $PROJECT_DIR/auth-db/opt/run
fi

if [ -z "$(id_for_container 'pomodoro-api-db')" ]; then
  echo "\n----> STARTING 'pomodoro-api-db'"
  $PROJECT_DIR/api-db/opt/run
fi


sleep 1
MAX_RETRIES=3
RETRIES_COUNT=1
LAST_EXIT_CODE=1
while [[ $RETRIES_COUNT -le $MAX_RETRIES && $LAST_EXIT_CODE -eq 1 ]]
do
  echo "\n=============================="
  echo "migrating db"
  echo "=============================="
  $PROJECT_DIR/opt/docker.migrate
  LAST_EXIT_CODE=$?
  ((RETRIES_COUNT++))
done

if [ -z "$(id_for_container 'pomodoro-api-db')" ]; then
  echo "\n----> STARTING 'pomodoro-api-db'"
  $PROJECT_DIR/auth/opt/run $ENV
fi

if [ -z "$(id_for_container 'pomodoro-auth')" ]; then
  echo "\n----> STARTING 'pomodoro-auth'"
  $PROJECT_DIR/auth/opt/run $ENV
fi

if [ -z "$(id_for_container 'pomodoro-api')" ]; then
  echo "\n----> STARTING 'pomodoro-api'"
  $PROJECT_DIR/api/opt/run $MIX_ENV
fi

if [ -z "$(id_for_container 'pomodoro-app')" ]; then
  echo "\n----> STARTING 'pomodoro-app'"
  $PROJECT_DIR/app/opt/run $ENV
fi

if [ -z "$(id_for_container 'pomodoro-docs')" ]; then
  echo "\n----> STARTING 'pomodoro-docs'"
  $PROJECT_DIR/docs/opt/run $ENV
fi

if [ -z "$(id_for_container 'pomodoro-main')" ]; then
  echo "\n----> STARTING 'pomodoro-main'"
  $PROJECT_DIR/main/opt/run $ENV
fi

echo ""
echo "MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
echo "MMMMMMMMMMMMMMMMMMMMMMMMMMMNmMMMMMMMMMMMMMMMMMMMMM"
echo "MMMMMMMMMMMMMMMNMMMMMMMMMmoyyNMMMMMMMMMMMMMMMMMMMM"
echo "MMMMMMMMMMMMMMNshhddmNMMdyhyMMMMMMMMMMMMMMMMMMMMMM"
echo "MMMMMMMMMMMMmddyyhhhhysoyh+yhhdhhdhhmMMMMMMMMMMMMM"
echo "MMMMMMMMNhyoooo+sydysyhhhhhhhhhhhsso/+oydMMMMMMMMM"
echo "MMMMMMNyoooooooooyyhhhhshhyyhhhsom++oooooohMMMMMMM"
echo "MMMMMmooooooo+o+shhhhhyshhh/yyhhhys/o+ooooooNMMMMM"
echo "MMMMd+oooooo+syyyyyyyhNhhhhsmyohhdhyo+ooooooomMMMM"
echo "MMMN+ooooooooooooyso+o/hyhhsy/o++oo+ooooooososMMMM"
echo "MMMsooooooooooooooooooo+-shohoooooooooooooooo+MMMM"
echo "MMM/oooooooooooooooooooo++sy+oooooooooooooooo+NMMM"
echo "MMM/ooooooooooooooooooooooooooooooooooooooooooyMMM"
echo "MMMooooooooooooooooooooooooooooooooooooooooooomMMM"
echo "MMMyooooooooooooooooooooooooooooooooooooooooo+NMMM"
echo "MMMMooooooooooooooooooooooooooooooooooooooooosMMMM"
echo "MMMMd+oooooooooooooooooooooooooooooooooooooooNMMMM"
echo "MMMMMyoooooooooooooooooooooooooooooooooooooomMMMMM"
echo "MMMMMMNooooooooooooooooooooooooooooooooooooNMMMMMM"
echo "MMMMMMMMdoooooooooooooooooooooooooooooooohMMMMMMMM"
echo "MMMMMMMMMMdooooooooooooooooooooooooooosdMMMMMMMMMM"
echo "MMMMMMMMMMMMdho+oooooooooooooooooo+shNMMMMMMMMMMMM"
echo "MMMMMMMMMMMMMMMNdhysooo+ooosossyhdMMMMMMMMMMMMMMMM"
echo "MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
echo "MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
